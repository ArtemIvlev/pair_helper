"""add_tune_notifications_table

Revision ID: 7d491bcb3ecb
Revises: dbb6d9e0ffaa
Create Date: 2025-08-11 14:53:11.647102

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7d491bcb3ecb'
down_revision = 'dbb6d9e0ffaa'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tune_notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pair_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('sender_user_id', sa.Integer(), nullable=False),
    sa.Column('recipient_user_id', sa.Integer(), nullable=False),
    sa.Column('sent_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['pair_id'], ['pairs.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['tune_quiz_questions.id'], ),
    sa.ForeignKeyConstraint(['recipient_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pair_id', 'question_id', 'sender_user_id', 'recipient_user_id', name='unique_tune_notification')
    )
    op.create_index(op.f('ix_tune_notifications_id'), 'tune_notifications', ['id'], unique=False)
    # Закомментировано для предотвращения удаления существующих таблиц на продакшене
    # op.drop_index('ix_answers_id', table_name='answers')
    # op.drop_table('answers')
    # op.drop_table('admin_users')
    # op.drop_index('ix_daily_questions_id', table_name='daily_questions')
    # op.drop_table('daily_questions')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('daily_questions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('daily_questions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='daily_questions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_daily_questions_id', 'daily_questions', ['id'], unique=False)
    op.create_table('admin_users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='admin_users_pkey'),
    sa.UniqueConstraint('username', name='admin_users_username_key')
    )
    op.create_table('answers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('question_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['daily_questions.id'], name='answers_question_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='answers_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='answers_pkey')
    )
    op.create_index('ix_answers_id', 'answers', ['id'], unique=False)
    op.drop_index(op.f('ix_tune_notifications_id'), table_name='tune_notifications')
    op.drop_table('tune_notifications')
    # ### end Alembic commands ###
