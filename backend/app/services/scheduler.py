import logging
from typing import Optional
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.cron import CronTrigger
from apscheduler.jobstores.memory import MemoryJobStore
from apscheduler.executors.asyncio import AsyncIOExecutor

from app.notifications.engine import NotificationEngine

logger = logging.getLogger(__name__)


class NotificationScheduler:
    def __init__(self):
        self.scheduler: Optional[AsyncIOScheduler] = None
        self.notification_engine: Optional[NotificationEngine] = None
        
    def start(self, notification_engine: NotificationEngine):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
        self.notification_engine = notification_engine
        
        # –°–æ–∑–¥–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º
        executors = {
            'default': AsyncIOExecutor()
        }
        jobstores = {
            'default': MemoryJobStore()
        }
        
        self.scheduler = AsyncIOScheduler(
            executors=executors,
            jobstores=jobstores,
            timezone='UTC'
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∫–∞–∂–¥—ã–π —á–∞—Å
        # –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è
        self.scheduler.add_job(
            self._run_scheduled_notifications,
            CronTrigger(minute=0),  # –ö–∞–∂–¥—ã–π —á–∞—Å –≤ :00
            id='scheduled_notifications',
            name='–ó–∞–ø—É—Å–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é',
            replace_existing=True
        )
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º GPT –∑–∞–¥–∞—á–∏
        self._register_gpt_jobs()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
        self.scheduler.start()
        logger.info("üöÄ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∑–∞–ø—É—â–µ–Ω")
        
    def stop(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫"""
        if self.scheduler:
            self.scheduler.shutdown()
            logger.info("üõë –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    def _register_gpt_jobs(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç GPT –∑–∞–¥–∞—á–∏ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ"""
        try:
            from app.gpt.scheduler.gpt_scheduler import register_gpt_jobs
            register_gpt_jobs()
            logger.info("‚úÖ GPT –∑–∞–¥–∞—á–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ")
        except ImportError:
            logger.warning("‚ö†Ô∏è GPT –º–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é GPT –∑–∞–¥–∞—á")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ GPT –∑–∞–¥–∞—á: {e}")
            
    async def _run_scheduled_notifications(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é"""
        try:
            if self.notification_engine:
                await self.notification_engine.run_scheduled()
                logger.info("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é: {e}")


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
scheduler = NotificationScheduler()


