#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–æ–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º API
"""

import requests
import json
from datetime import datetime, timedelta

def test_tune_fix():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Å–æ–Ω–∞—Å—Ç—Ä–æ–π–∫—É"""
    
    base_url = "http://localhost:8000"
    pair_id = 1
    week_start = (datetime.now() - timedelta(days=7)).strftime("%Y-%m-%d")
    
    print("üéØ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –°–û–ù–ê–ù–°–¢–†–û–ô–ö–ò")
    print("=" * 60)
    
    try:
        response = requests.get(
            f"{base_url}/api/v1/internal/pair/{pair_id}/weekly-activity",
            params={"week_start": week_start}
        )
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            
            # –ò—â–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–æ–Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            tune_activities = [a for a in data['activities'] if a['type'] == 'tune']
            
            print(f"–ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π —Å–æ–Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {len(tune_activities)}")
            print()
            
            for i, activity in enumerate(tune_activities, 1):
                print(f"üéµ –°–æ–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ #{i}:")
                print(f"   –î–∞—Ç–∞: {activity['date']}")
                print(f"   –í–æ–ø—Ä–æ—Å: {activity['title']}")
                print(f"   –û—Ç–≤–µ—Ç—ã:")
                
                # –†–∞–∑–±–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏
                description = activity['description']
                if " | " in description:
                    parts = description.split(" | ")
                    for part in parts:
                        print(f"     ‚Ä¢ {part}")
                else:
                    print(f"     ‚Ä¢ {description}")
                print()
                
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

if __name__ == "__main__":
    test_tune_fix()
