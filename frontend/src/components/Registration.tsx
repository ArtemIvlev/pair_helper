import React, { useState, useEffect } from 'react'
import { useNavigate, useSearchParams } from 'react-router-dom'
import { getApiUrl } from '../config'

interface RegistrationProps {
  user: any
  onRegistrationComplete: (userData: any) => void
}

const Registration: React.FC<RegistrationProps> = ({ user, onRegistrationComplete }) => {
  const navigate = useNavigate()
  const [searchParams] = useSearchParams()
  const [step, setStep] = useState(1)
  const [formData, setFormData] = useState({
    firstName: user?.first_name || '',
    acceptTerms: false,
    acceptPrivacy: false
  })
  const [loading, setLoading] = useState(false)
  const [invitationInfo, setInvitationInfo] = useState<any>(null)
  const [inviteCode, setInviteCode] = useState<string | null>(null)

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value, type, checked } = e.target
    setFormData(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value
    }))
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    const directInvite = searchParams.get('invite')
    const startParam = searchParams.get('tgWebAppStartParam') || searchParams.get('start') || ''
    const telegramStartParam = (window.Telegram?.WebApp?.initDataUnsafe as any)?.start_param || ''
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å invite_
    const startAppInvite = startParam.startsWith('invite_') ? startParam.replace('invite_', '') : null
    const telegramInvite = telegramStartParam.startsWith('invite_') ? telegramStartParam.replace('invite_', '') : null
    
    const invite = directInvite || startAppInvite || telegramInvite
    
    if (invite) {
      setInviteCode(invite)
      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏
              fetch(getApiUrl(`/v1/invitations/${invite}`))
        .then(response => response.json())
        .then(data => {
          if (data.code) {
            setInvitationInfo(data)
          }
        })
        .catch(error => {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏:', error)
        })
    }
  }, [searchParams])

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    
    if (!formData.acceptTerms || !formData.acceptPrivacy) {
      alert('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –≤—Å–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è')
      return
    }

    setLoading(true)
    
    const requestBody = {
      telegram_id: user.id,
      first_name: formData.firstName,
      accept_terms: formData.acceptTerms,
      accept_privacy: formData.acceptPrivacy,
      invite_code: inviteCode
    }
    
    try {
      // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const response = await fetch(getApiUrl('/v1/users/register'), {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(requestBody)
      })

      if (response.ok) {
        const userData = await response.json()
        
        onRegistrationComplete(userData)
        navigate('/pulse_of_pair/')
      } else {
        const error = await response.json()
        alert(`–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${error.detail}`)
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
    } finally {
      setLoading(false)
    }
  }

  if (step === 1) {
    return (
      <div className="main-content">
        <div className="container">
                  <div className="header">
          <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã</h1>
          <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü—É–ª—å—Å –≤–∞—à–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π –≤ –ø–∞—Ä–µ</p>
          

          
          {invitationInfo && (
            <div className="invitation-notice" style={{
              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
              color: 'white',
              padding: '16px',
              borderRadius: '12px',
              marginTop: '16px',
              textAlign: 'center'
            }}>
              <h3 style={{ margin: '0 0 8px 0' }}>üéâ –í—ã –ø—Ä–∏–≥–ª–∞—à–µ–Ω—ã!</h3>
              <p style={{ margin: '0', opacity: '0.9' }}>
                {invitationInfo.inviter_name} –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –≤–∞—Å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –ø–∞—Ä–µ. 
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, –∏ –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∞–Ω–µ—Ç–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏!
              </p>
            </div>
          )}
        </div>

          <div className="card card-elevated fade-in">
            <h3>–ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç?</h3>
            <div style={{ textAlign: 'left', marginTop: '16px' }}>
              <div style={{ display: 'flex', alignItems: 'center', marginBottom: '12px' }}>
                <span style={{ fontSize: '20px', marginRight: '12px' }}>üí¨</span>
                <span>–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –æ–±—â–µ–Ω–∏—è</span>
              </div>
              <div style={{ display: 'flex', alignItems: 'center', marginBottom: '12px' }}>
                <span style={{ fontSize: '20px', marginRight: '12px' }}>‚ù§Ô∏è</span>
                <span>–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è</span>
              </div>
              <div style={{ display: 'flex', alignItems: 'center', marginBottom: '12px' }}>
                <span style={{ fontSize: '20px', marginRight: '12px' }}>üìÖ</span>
                <span>–û–±—â–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å–æ–±—ã—Ç–∏–π</span>
              </div>
              <div style={{ display: 'flex', alignItems: 'center', marginBottom: '12px' }}>
                <span style={{ fontSize: '20px', marginRight: '12px' }}>üéØ</span>
                <span>–†–∏—Ç—É–∞–ª—ã –∏ –ø—Ä–∏–≤—ã—á–∫–∏</span>
              </div>
              <div style={{ display: 'flex', alignItems: 'center' }}>
                <span style={{ fontSize: '20px', marginRight: '12px' }}>üìä</span>
                <span>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏–π</span>
              </div>
            </div>
          </div>

          <button 
            className="btn btn-primary" 
            onClick={() => setStep(2)}
            style={{ marginTop: '16px' }}
          >
            –ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
          </button>
        </div>
      </div>
    )
  }

  return (
    <div className="main-content">
      <div className="container">
        <div className="header">
          <h1>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h1>
          <p>–ó–∞–≤–µ—Ä—à–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø—Ä–æ—Ñ–∏–ª—è</p>
        </div>

        <form onSubmit={handleSubmit}>
          <div className="card card-elevated fade-in">
            <div className="form-group">
              <label htmlFor="firstName">–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç? *</label>
              <input
                type="text"
                id="firstName"
                name="firstName"
                value={formData.firstName}
                onChange={handleInputChange}
                required
                placeholder="–í–∞—à–µ –∏–º—è"
              />
            </div>
          </div>

          <div className="card card-elevated fade-in">
            <h3>–°–æ–≥–ª–∞—à–µ–Ω–∏—è</h3>
            
            <div className="form-group" style={{ marginBottom: '16px' }}>
              <label style={{ 
                display: 'flex', 
                alignItems: 'flex-start', 
                cursor: 'pointer',
                gap: '8px',
                width: '100%'
              }}>
                <input
                  type="checkbox"
                  name="acceptTerms"
                  checked={formData.acceptTerms}
                  onChange={handleInputChange}
                  style={{ 
                    marginTop: '2px',
                    flexShrink: 0,
                    width: '16px',
                    height: '16px'
                  }}
                />
                <span style={{ 
                  fontSize: '14px', 
                  lineHeight: '1.4',
                  flex: '1',
                  wordBreak: 'break-word',
                  overflowWrap: 'break-word'
                }}>
                  –Ø –ø—Ä–∏–Ω–∏–º–∞—é <strong>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</strong> –∏ —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                </span>
              </label>
            </div>

            <div className="form-group">
              <label style={{ 
                display: 'flex', 
                alignItems: 'flex-start', 
                cursor: 'pointer',
                gap: '8px',
                width: '100%'
              }}>
                <input
                  type="checkbox"
                  name="acceptPrivacy"
                  checked={formData.acceptPrivacy}
                  onChange={handleInputChange}
                  style={{ 
                    marginTop: '2px',
                    flexShrink: 0,
                    width: '16px',
                    height: '16px'
                  }}
                />
                <span style={{ 
                  fontSize: '14px', 
                  lineHeight: '1.4',
                  flex: '1',
                  wordBreak: 'break-word',
                  overflowWrap: 'break-word'
                }}>
                  –Ø –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ <strong>–æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</strong> –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ü–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                </span>
              </label>
            </div>
          </div>

          <button 
            type="submit" 
            className="btn btn-primary"
            disabled={loading || !formData.acceptTerms || !formData.acceptPrivacy}
            style={{ marginTop: '16px' }}
          >
            {loading ? '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...' : '–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é'}
          </button>
        </form>
      </div>
    </div>
  )
}

export default Registration
