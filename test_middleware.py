#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã TelegramIdMiddleware
"""

import asyncio
import json
from urllib.parse import parse_qsl

def extract_telegram_id_from_data(init_data: str):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç telegram_id –∏–∑ –¥–∞–Ω–Ω—ã—Ö Telegram –±–µ–∑ –ø–æ–ª–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏"""
    try:
        # –†–∞–∑–±–∏—Ä–∞–µ–º init_data (URL-decoded –ø–∞—Ä—ã key=value)
        pairs = dict(parse_qsl(init_data, keep_blank_values=True))
        data_dict = dict(pairs)
        
        # –ü–æ–ª—É—á–∞–µ–º user_id –∏–∑ –¥–∞–Ω–Ω—ã—Ö (user –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫–∞–∫ JSON-—Å—Ç—Ä–æ–∫–∞)
        raw_user = data_dict.get('user')
        user_obj = {}
        if isinstance(raw_user, str):
            try:
                user_obj = json.loads(raw_user)
            except Exception:
                user_obj = {}
        elif isinstance(raw_user, dict):
            user_obj = raw_user

        user_id = None
        if isinstance(user_obj, dict):
            user_id = user_obj.get('id')
        
        return user_id
    except Exception as e:
        print(f"Error extracting telegram_id: {e}")
        return None

def test_extract_telegram_id():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ telegram_id"""
    test_data = "user=%7B%22id%22%3A123456%7D&auth_date=1755204786&hash=test"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ telegram_id...")
    print(f"üìù –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: {test_data}")
    
    telegram_id = extract_telegram_id_from_data(test_data)
    print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: telegram_id = {telegram_id}")
    
    if telegram_id == 123456:
        print("üéâ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
        return True
    else:
        print("‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª!")
        return False

if __name__ == "__main__":
    test_extract_telegram_id()
