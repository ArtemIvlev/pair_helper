#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –∞–¥–º–∏–Ω–∫–∏ Pair Helper
"""

import requests
import json
from urllib3.exceptions import InsecureRequestWarning
import urllib3
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ SSL
urllib3.disable_warnings(InsecureRequestWarning)

def get_auth_token(base_url, username, password):
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    try:
        response = requests.post(
            f"{base_url}/api/auth",
            json={"username": username, "password": password},
            verify=False,
            timeout=10
        )
        if response.status_code == 200:
            return response.json().get("token")
        else:
            print(f"–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {response.status_code}")
            return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞: {e}")
        return None

def get_container_logs(base_url, token, container_name, lines=50):
    """–ü–æ–ª—É—á–∞–µ—Ç –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"""
    try:
        headers = {"Authorization": f"Bearer {token}"}
        
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        response = requests.get(
            f"{base_url}/api/endpoints/2/docker/containers/json?all=true",
            headers=headers,
            verify=False,
            timeout=10
        )
        
        if response.status_code != 200:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: {response.status_code}")
            return None
        
        containers = response.json()
        
        # –ò—â–µ–º –Ω—É–∂–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        target_container = None
        for container in containers:
            names = container.get('Names', [])
            for name in names:
                if container_name in name:
                    target_container = container
                    break
            if target_container:
                break
        
        if not target_container:
            print(f"–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∏–º–µ–Ω–µ–º '{container_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:")
            for container in containers:
                names = container.get('Names', [])
                print(f"  - {names}")
            return None
        
        container_id = target_container['Id']
        
        # –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏
        response = requests.get(
            f"{base_url}/api/endpoints/2/docker/containers/{container_id}/logs",
            headers=headers,
            params={
                'stdout': 'true',
                'stderr': 'true',
                'tail': str(lines),
                'timestamps': 'true'
            },
            verify=False,
            timeout=30
        )
        
        if response.status_code == 200:
            return response.text
        else:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤: {response.status_code}")
            return None
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ª–æ–≥–æ–≤: {e}")
        return None

def main():
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Portainer
    PORTAINER_URL = os.getenv('PORTAINER_URL', 'https://192.168.2.228:31015')
    PORTAINER_USERNAME = os.getenv('PORTAINER_USERNAME', 'admin')
    PORTAINER_PASSWORD = os.getenv('PORTAINER_PASSWORD', 'your_password_here')
    
    print("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –∞–¥–º–∏–Ω–∫–∏ Pair Helper...")
    print(f"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Portainer: {PORTAINER_URL}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
    token = get_auth_token(PORTAINER_URL, PORTAINER_USERNAME, PORTAINER_PASSWORD)
    if not token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
        return
    
    print("‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    
    # –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏ –∞–¥–º–∏–Ω–∫–∏
    logs = get_container_logs(PORTAINER_URL, token, 'pair-helper-admin', lines=100)
    
    if logs:
        print("üìã –õ–æ–≥–∏ –∞–¥–º–∏–Ω–∫–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 100 —Å—Ç—Ä–æ–∫):")
        print("=" * 80)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ª–æ–≥–∏ (—É–±–∏—Ä–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Docker)
        lines = logs.split('\n')
        for line in lines:
            if line.strip():
                # –£–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–µ 8 –±–∞–π—Ç (Docker header)
                if len(line) > 8:
                    clean_line = line[8:]
                    print(clean_line)
                else:
                    print(line)
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏ –∞–¥–º–∏–Ω–∫–∏")

if __name__ == "__main__":
    main()

