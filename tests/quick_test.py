#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
"""

import requests
import json
from urllib3.exceptions import InsecureRequestWarning
import urllib3

# –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ SSL
urllib3.disable_warnings(InsecureRequestWarning)

def test_api():
    base_url = "http://192.168.2.228:8000/api"
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...")
    print(f"Base URL: {base_url}")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ API...")
    try:
        response = requests.get(f"{base_url}/docs", verify=False, timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –£—Å–ø–µ—Ö: {response.status_code == 200}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –≠–Ω–¥–ø–æ–∏–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    try:
        response = requests.get(f"{base_url}/v1/users/me?telegram_id=123", verify=False, timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –£—Å–ø–µ—Ö: {response.status_code in [200, 404]}")  # 404 —Ç–æ–∂–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –≠–Ω–¥–ø–æ–∏–Ω—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 404 –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π...")
    try:
        response = requests.post(f"{base_url}/v1/invitations/generate?inviter_telegram_id=999999", verify=False, timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –£—Å–ø–µ—Ö: {response.status_code in [200, 404]}")  # 404 –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if response.status_code != 404:
            print(f"   –û—Ç–≤–µ—Ç: {response.text[:200]}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
    print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π...")
    try:
        response = requests.get(f"{base_url}/v1/invitations/test", verify=False, timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –î–æ—Å—Ç—É–ø–µ–Ω: {response.status_code != 404}")  # –õ—é–±–æ–π –æ—Ç–≤–µ—Ç –∫—Ä–æ–º–µ 404 –æ–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ —Ä–æ—É—Ç–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_api()
